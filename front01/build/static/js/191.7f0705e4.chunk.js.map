{"version":3,"file":"static/js/191.7f0705e4.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","../javascript/esm|/home/alexander/Desktop/github/NodeJs/MERN/front01/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useRef, useState } from 'react'\nimport Button from './Button';\n\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        //preview\n        if (!file) {\n            return;\n        };\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        }\n        fileReader.readAsDataURL(file);\n    }, [file])\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    }\n\n    const pickHandler = (event) => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if (event.target.files && event.target.files.length === 1) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n    }\n\n    return (\n        <div className='form-control'>\n            <input\n                ref={filePickerRef}\n                type=\"file\"\n                id={props.id}\n                style={{ display: \"none\" }}\n                accept='.jpg,.png,.jpeg'\n                onChange={pickHandler}\n            />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className='image-upload__preview'>\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\"></img>}\n                    {!previewUrl && <p>Please pick an Image!! </p>}\n\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler} >Pick Image</Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    )\n}\n\nexport default ImageUpload\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useState, useContext } from 'react';\n\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport Card from '../../shared/components/UIElements/Card';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const authCtx = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        authCtx.login(responseData.userId, responseData.token);\n      } catch (err) {\n        console.log(err)\n      }\n    } else {\n      try {\n\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value)\n        formData.append(\"name\", formState.inputs.name.value)\n        formData.append(\"password\", formState.inputs.password.value)\n        formData.append(\"image\", formState.inputs.image.value)\n\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\n          'POST',\n          formData\n        );\n\n        authCtx.login(responseData.userId, responseData.token);\n      } catch (err) {\n        console.log(err)\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode &&\n            <ImageUpload\n              id=\"image\"\n              center\n              onInput={inputHandler}\n              errorText=\"Please provide an Image\"\n            />\n          }\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"names":["props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","id","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrl","AbortController","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","authCtx","useContext","AuthContext","isLoginMode","setIsLoginMode","email","password","inputHandler","setFormData","authSubmitHandler","process","JSON","stringify","login","userId","token","console","log","formData","FormData","append","name","image","ErrorModal","Card","LoadingSpinner","asOverlay","Input","ImageUpload","undefined","prevMode"],"sourceRoot":""}